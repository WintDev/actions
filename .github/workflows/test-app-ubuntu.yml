name: test-app-ubuntu
on:
  workflow_call:
    inputs:
      solution-name:
        description: 'The name of the solution to build.'
        required: true
        type: string
      test-sources:
        description: 'The comma-separated list of path/testassembly to run as test(s). If not specified, the param solution-name is used as the source of a single test.'
        required: false
        type: string
      warning-level:
        description: 'The warning level of the restore and build actions. If not specified, the default value 0, indicating that no warning messages are displayed, is used.'
        required: false
        default: '0'
        type: string
      console-logger-parameters:
        description: 'The parameters passed to the console logger in restore and build commands. If not specified, the default value ErrorsOnly is used.'
        required: false
        default: 'ErrorsOnly'
        type: string
      build-verbosity:
        required: false
        default: 'quiet'
        type: string
      test-verbosity:
        description: 'The verbosity of the test console logger. If not specified, the default value minimal is used.'
        required: false
        default: 'quiet'
        type: string
      dotnet-version:
        required: false
        default: '6'
        type: string
      test-filter:
        required: false
        default: 'trigger!=manual&FullyQualifiedName~UnitTests'
        type: string

    secrets:
      nuget-read-pat:
        description: 'The Personal Access Token used to access the WintDev internal nuget feed when restoring.'
        required: true

jobs:
  test:
    name: Build and Test (${{ inputs.solution-name }})
    runs-on: ubuntu-latest
    continue-on-error: false
    env:
      CONFIGURATION: release
      WINT_GITHUB_NUGET_SOURCE_URL: 'https://nuget.pkg.github.com/WintDev/index.json'

    steps:
      - name: get_test_sources
        id: get_test_sources
        shell: bash
        run: |
          if [[ "${{ inputs.test-sources }}" != ""}} ]]
          then
            echo "Using test-sources as test source"
            TEST_SOURCES=${{ inputs.test-sources }}
          else
            echo "Using solution-name as test source"
            TEST_SOURCES=${{ inputs.solution-name }}
          fi
          echo "test_sources=$TEST_SOURCES" >> $GITHUB_OUTPUT

      - name: Install dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            ${{ inputs.dotnet-version }}.0.x

      - name: Add GitHub Nuget registry
        run: dotnet nuget add source --username WintDev --password ${{ secrets.nuget-read-pat }} --store-password-in-clear-text --name WintDev "${{ env.WINT_GITHUB_NUGET_SOURCE_URL }}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore
        run: dotnet restore ${{ inputs.solution-name }} --verbosity ${{ inputs.build-verbosity }} --property WarningLevel=${{ inputs.warning-level }} /clp:${{ inputs.console-logger-parameters }}

      - name: Build
        run: dotnet build ${{ inputs.solution-name }} --configuration ${{ env.CONFIGURATION }} --verbosity ${{ inputs.build-verbosity }} --property WarningLevel=${{ inputs.warning-level }} /clp:${{ inputs.console-logger-parameters }} --no-restore

      - name: Test
        #run: dotnet test ${{ inputs.solution-name }} --filter trigger!=manual --configuration ${{ env.CONFIGURATION }} --no-build
        shell: bash
        run: |
          dotnet test ${{ inputs.solution-name }} --filter "${{ inputs.test-filter }}" --configuration ${{ env.CONFIGURATION }} --logger:"console;verbosity=${{ inputs.test-verbosity }};consoleLoggerParameters=${{ inputs.console-logger-parameters }}" --no-build