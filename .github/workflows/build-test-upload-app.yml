name: build-test-upload-app
on:
  workflow_call:
    inputs:
      solution-name:
        description: 'The name of the solution to build and test.'
        required: true
        type: string

      assembly-url:
        description: 'The path to the entry assembly for the service app.'
        required: true
        type: string

      artifacts-prefix:
        description: 'The prefix of the artifacts that contain the function app bits.'
        required: true
        type: string

      package-name:
        description: 'The name of the package contained in the artifacts published.'
        required: true
        type: string
        default: 'app'
    secrets:
      nuget-read-pat:
        description: 'The Personal Access Token used to access the WintDev internal nuget feed when restoring.'
        required: true

jobs:
  build:
    name: Build, Test and publish (${{ inputs.solution-name }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    env:
      CONFIGURATION: release

      ARTIFACTS_PATH: 'artifacts/published'
      WINT_NUGET_SOURCE_URL: 'https://nuget.pkg.github.com/WintDev/index.json'

    steps:
      - name: Install dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            3.1.x
            5.0.x
            6.0.x

      - name: Add GitHub Nuget registry
        run: dotnet nuget add source --username WintDev --password ${{ secrets.nuget-read-pat }} --store-password-in-clear-text --name WintDev "${{ env.WINT_NUGET_SOURCE_URL }}"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion (v5.x)
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Run GitVersion
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Restore
        run: dotnet restore ${{ inputs.solution-name }}

      - name: Build
        run: |
          dotnet build "${{ inputs.assembly-url }}" --configuration ${{ env.CONFIGURATION }} /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.Sha }} /p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} --no-restore

      - name: Test
        run: dotnet test ${{ inputs.solution-name }} --configuration ${{ env.CONFIGURATION }}

      - name: Publish
        run: |
          dotnet publish "${{ inputs.assembly-url }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.ARTIFACTS_PATH }}/${{ inputs.package-name }}"

      - name: 'Upload app artifact(s)'
        uses: actions/upload-artifact@v2
        with:
          name: '${{ inputs.artifacts-prefix }}-${{ github.run_id }}'
          path: ${{ env.ARTIFACTS_PATH }}
          retention-days: 1