name: test-app-windows
on:
  workflow_call:
    inputs:
      solution-name:
        description: 'The name of the solution to build and test.'
        required: true
        type: string

      force:
        description: By default, test on Windows is not performed and test execution on Windows **MUST** be forced using this boolean input.
        type: boolean
        default: false

      dotnet-version:
          description: 'The main version of .net to install. The default value is 8.'
          required: false
          default: '8'
          type: string
  

    secrets:
      nuget-read-pat:
        description: 'The Personal Access Token used to access the WintDev internal nuget feed when restoring.'
        required: true

jobs:
  build:
    name: Build and Test (${{ inputs.solution-name }})
    runs-on: windows-latest
    if: ${{ inputs.force == true }}
    strategy:
      fail-fast: true
    env:
      CONFIGURATION: release
      WINT_GITHUB_NUGET_SOURCE_URL: 'https://nuget.pkg.github.com/WintDev/index.json'

    steps:
      - name: Install dotnet 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            ${{ inputs.dotnet-version }}.0.x

      - name: Add GitHub Nuget registry
        run: dotnet nuget add source --username WintDev --password ${{ secrets.nuget-read-pat }} --store-password-in-clear-text --name WintDev "${{ env.WINT_GITHUB_NUGET_SOURCE_URL }}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Get nuget cache key suffix
        id: get_cache_key
        shell: bash
        run: |
          HASH=${{ hashFiles('**/packages.lock.json') }}
          echo "hash=$HASH" >> $GITHUB_OUTPUT
  
      - name: Cache nuget restore artifacts
        if: ${{ steps.get_cache_key.outputs.hash != '' }} 
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ steps.get_cache_key.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-nuget-        

      - name: Restore
        run: dotnet restore ${{ inputs.solution-name }} --locked-mode

      - name: Build
        run: dotnet build ${{ inputs.solution-name }} --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test
        run: dotnet test ${{ inputs.solution-name }} --filter trigger!=manual --configuration ${{ env.CONFIGURATION }} --no-build
